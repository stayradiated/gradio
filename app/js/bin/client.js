// Generated by CoffeeScript 1.6.3
(function() {
  var METHODS, Promise, callMethod, method, _fn, _i, _len,
    __slice = [].slice;

  Promise = require('when');

  METHODS = ['getSearchResults', 'getArtistsSongs', 'getAlbumSongs', 'getPlaylistSongs', 'albumGetAllSongs', 'userGetSongsInLibrary', 'getFavorites', 'getPopularSongs', 'markSongAsDownloaded', 'markStreamKeyOver30Seconds', 'markSongComplete', 'authenticateUser', 'logoutUser', 'initiateQueue', 'createPlaylist', 'playlistAddSongToExisting', 'userAddSongsToLibrary', 'favorite', 'userGetPlaylists', 'getSongUrl', 'getSongStream'];

  module.exports = (function() {
    function exports() {}

    return exports;

  })();

  callMethod = function(method, args) {
    var deferred;
    deferred = Promise.defer();
    $.ajax({
      method: 'post',
      url: "http://" + global.server + ":" + global.port + "/" + method,
      data: JSON.stringify(args),
      success: function(data) {
        return deferred.resolve(JSON.parse(data));
      }
    });
    return deferred.promise;
  };

  _fn = function(method) {
    return module.exports.prototype[method] = function() {
      var args;
      args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
      return callMethod(method, args);
    };
  };
  for (_i = 0, _len = METHODS.length; _i < _len; _i++) {
    method = METHODS[_i];
    _fn(method);
  }

}).call(this);
